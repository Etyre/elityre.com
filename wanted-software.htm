<!DOCTYPE html>

<head> 
	<title>Eli Tyre</title>
	<link rel="stylesheet" type="text/css" href="css/main.css">
	<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
	
	<!-- Global site tag (gtag.js) - Google Analytics -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-205493387-1"></script>
	<script>
  	 window.dataLayer = window.dataLayer || [];
  	 function gtag(){dataLayer.push(arguments);}
  	 gtag('js', new Date());

  	 gtag('config', 'UA-205493387-1');
	</script>
	
</head>

<body>
	<!--Navigation bar-->
	<div id="nav-placeholder">
	</div>
	<!--This /\ is where the Nav bar goes on the page.
	this \/ is the code that goes and gets the nav bar content from nav.html-->
	<script>
	$(function(){
	  $("#nav-placeholder").load("nav.html");
	});
	</script>
	<!--end of Navigation bar-->
	
	<div class="page title">
		<h1>Desired software</h1>

        <p>This is a list of the software tools that I would like to use, and would pay for, if they existed. Some of these, I'll probably sit down and build myself one day.</p>

        <ul>
            <li>A window-centric session manager for firefox (though I would switch to chrome for this). Described <a href="https://docs.google.com/document/d/1-1gF_R-TS_SP54qCCS9ihGpf6lwZm6tk6nl-a25npLM/edit">here</a>, <a href="https://threadreaderapp.com/thread/1720281915243335985.html">here</a>, and <a href="https://musingsandroughdrafts.com/2023/11/08/smart-sessions-finally-a-kinda-window-centric-session-manager/">here</a>. <a href="https://chromewebstore.google.com/detail/smart-sessions-tab-manage/hhfefdiablijkjnbkmdfbopiimjilchh?pli=1">Smart Sessions</a>a is close to what I want, but it's laggy, and still requires too many clicks, and is only for chrome.</li>

			<li>A recommendation engine for articles and blog posts that will serve me content, tailored to my interests, <em>without regard for recency</em>. I want to read the best content of the past 50 years, not the content that other people liked this week or this month.</li>

        </ul>
	</div>
	
	
<div class="main text">


</div>
	

	<div id="last updated">
	
	
	
	<script>
		
		// this part gets the file name from the URL.
		var urlArray = window.location.href.split("/");

		var nameOfThisPage = urlArray[urlArray.length-1];

		// this part uses the github API to get the last commit data for that file, and then writes a line the HTML body.

		// future Eli, this is a function. It is in Arrow syntax. You should learn this.
		const getCommits = async pageName => {

			var result = await fetch('https://api.github.com/repos/etyre/elityre.com/commits?path='+ encodeURIComponent(pageName));

			var data = await result.json();

			var timestamp = new Date(data[0].commit.author.date)
			// the Date function takes a date string, and returns a date object.

			//var month = timestamp.getMonth()


			var formattedDate = timestamp.toDateString()

			console.log(formattedDate)

			


			document.getElementById('last updated').innerHTML = "<p><br><br><i>This page was last updated on "+ formattedDate + ".</i></p>";


			}

			// const data = await getCommits('test');
			// Make some notes about Await and what it does.
			// Note that you can only use await inside of an async function.
			
			getCommits(nameOfThisPage);
			
		</script>
	
		</div>
